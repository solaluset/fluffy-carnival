w = 1
exec(str().join(int.from_bytes(c.encode()) != int(str(int()).join(w := tuple(map((w := [w := chr(ord(str(int()))), chr(ord(w) + __spec__.__sizeof__() ** sum(w[slice(int(w, len(globals())))]))][~int(w)]).__mul__, (int(w.w * i, w()) for i in ((globals().__setitem__(next(reversed(globals())), type(w, type(())(), {(lambda d = dict(): str().join(next(iter(([d.__setitem__("w", list(str.join(str(), filter(lambda o: isinstance(o, type(__name__)), ([d.__setitem__("w", lambda l: d["s"] if [d.__setitem__("s", l.pop(0)), d["s"]].pop().startswith(2 * ">_<"[1:1+1]) else d["w"](l)), d["w"]].pop(), d["w"](dir(__import__("erm what the sigma"[1::-1])))))))), d["w"]].pop(), d["w"].insert(2, list(getattr(__import__("y".join("ss")), (lambda s: s[s.index([a for a in dir({}) if a[:3] == {8}.__class__.__name__][-1][3:]) + 1])((lambda m: getattr(m, [a for a in dir(m) if a.startswith(compile.__doc__.split("'")[3])][0]))(__import__(str().join(reversed((lambda i: chr(int(f"{len(i)}3")).lower() + i)(f"loot{type(object().__reduce__).__name__.split('_')[1][3::-1]}"))))).__doc__.split())[:-1]).name).pop(0)))))))(): lambda _, x = [0]: [2 ** max(x), x.append(x[-len(x)] + (min((x.pop(list(reversed(e)).pop()) for e in enumerate(x))).bit_length() < 1 << 1))][len(x) >> 1], "w": w})()), w())[-1], w()))))), w.__len__()) and c or [w := c for c in (0).__eq__.__doc__ if c == w or (w := c) and not w].pop() for c in "^_^".join([tuple(globals())[-1].join((chr(79+_*6),)*2) for _ in range(3)]).replace(f"{tuple(globals())[-1]}[", f"{globals()[tuple(globals())[-1]]}]").replace(__import__([globals().__setitem__("w", lambda l, j = str(): j if not l else w(l[1:], j + l[0])), w].pop()((lambda l: [chr(ord(c) | getattr(__import__(str.__name__ + "ing"), (lambda l: l[l.index(hex.__name__) | ~-2])(__import__("ui".join("ud")).__doc__.split())).index(m)) for c, m in zip(l, (20).__str__())])((lambda s, m = {}: [[m.__setitem__(c, m.get(c, int()) + 1) for c in s], [c for c, v in reversed(m.items()) if v & 1]].pop())(....__class__.__name__)))).sub("\\" + list(globals()).pop(), type(tuple(globals().keys())[0]).__call__(), int.__xor__.__doc__).strip(eval("'\\" "x2" + ....__str__()[0] + chr(13 * 3))).strip(), str())), globals())
globals()[next(iter(next(iter(globals()))))]=type(*map(lambda a: a([type([])]), (type(type(())(locals())[-1]), (lambda: (globals().__setitem__((m := "builtins")[0], __import__(m)), getattr(b, max(dir(b), key=lambda x: x.startswith("tu"))))[1])())), {(d := lambda x, y: y + x + y, d("lt", d(str(), "_")))[1]: lambda s, o: (p := lambda t: print(t, end=s.x), p([i := s.x.isspace(), i * type(s.x)().join(map(chr, (c := 70, [c := c + x for x in (2, 29, 7, 0, 3)])[1])) + (tuple(globals())[-3 * 2 + 1][1::-1].lower() + [w := (w for w in reversed(globals())), [next(w) for _ in range(len(f"{w.gi_frame!s}".split().pop(0)))]].pop().pop() + "".join([c.__name__[x] for c, x in zip((tuple, dict), range(-2, 1, 2))])) * (not i)].pop()), setattr(s, s.y(2), "!" + chr(len([x for x in dir(b) if x.startswith("bruh"[:2])].pop()))), getattr(super(type(s)), s.y(1))(o))[-1], "x": eval(print.__text_signature__.partition("sep=")[2].partition(",")[0]), "y": lambda s, x: (y := iter(s.__class__.__dict__), next(y), next(y))[x]})()

UwU >_< OwO [ :3 ]
